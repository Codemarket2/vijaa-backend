type Query {
  getForm(_id: ID!): Form @aws_api_key @aws_cognito_user_pools
  getFormBySlug(slug: String!): Form @aws_api_key @aws_cognito_user_pools
  getForms(page: Int, limit: Int, search: String): Forms
}

type Mutation {
  createForm(parentId: ID, name: String!, fields: [Field2Input], settings: AWSJSON): Form
  updateForm(
    _id: ID!
    parentId: ID
    name: String
    fields: [Field2Input]
    settings: AWSJSON
    published: Boolean
  ): Form
  deleteForm(_id: ID!): ID!
}

type Subscription {
  formSub: Form @aws_subscribe(mutations: ["createForm", "updateForm"])
  updatedForm(_id: ID!): Form @aws_subscribe(mutations: ["updateForm"])
  deletedForm: ID @aws_subscribe(mutations: ["deleteForm"])
}

type Field2 @aws_api_key @aws_cognito_user_pools {
  _id: ID
  label: String
  fieldType: String
  options: AWSJSON
  typeId: ListType
  form: Form
}

input Field2Input {
  _id: ID
  label: String!
  fieldType: String!
  options: AWSJSON
  typeId: ID
  form: ID
}

type Form @aws_api_key @aws_cognito_user_pools {
  _id: ID!
  parentId: ID
  name: String
  slug: String
  fields: [Field2]
  settings: AWSJSON
  published: Boolean
  createdBy: User
  updatedBy: ID
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Forms {
  count: Int
  data: [Form]
}
