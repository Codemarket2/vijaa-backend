type Query {
  getField(_id: ID!): Field
  getFields(parentId: ID!, sortBy: String, search: String): [Field]
    @aws_api_key
    @aws_cognito_user_pools
  getFieldValues(
    parentId: ID!
    field: ID!
    page: Int
    limit: Int
    onlyShowByUser: Boolean
  ): FieldValues @aws_api_key @aws_cognito_user_pools
  getFieldValue(_id: ID!): FieldValue
  getPageMentions(_id: ID!, page: Int, limit: Int, active: Boolean, search: String): FieldValues
}

type Mutation {
  createField(
    parentId: ID!
    relationId: ID
    _id: ID
    label: String!
    fieldType: String!
    typeId: ID
    multipleValues: Boolean
    oneUserMultipleValues: Boolean
  ): Field
  updateField(
    _id: ID!
    relationId: ID
    parentId: ID
    label: String
    fieldType: String
    typeId: ID
    multipleValues: Boolean
    oneUserMultipleValues: Boolean
    options: AWSJSON
  ): Field
  updateFieldPosition(_id: ID!, position: Float!): Field
  deleteField(_id: ID!): String
  createFieldValue(
    _id: ID
    parentId: ID!
    relationId: ID
    field: ID!
    value: String
    valueDate: AWSDateTime
    valueNumber: Int
    valueBoolean: Boolean
    media: [MediaInput]
    itemId: ID
  ): FieldValue
  updateFieldValue(
    _id: ID!
    value: String
    parentId: ID
    field: ID
    relationId: ID
    valueDate: AWSDateTime
    valueNumber: Int
    valueBoolean: Boolean
    media: [MediaInput]
    itemId: ID
  ): FieldValue
  deleteFieldValue(_id: ID!): String
}

type Subscription {
  addedField(parentId: ID): Field @aws_subscribe(mutations: ["createField", "updateField"])
  addedFieldValue(parentId: ID): FieldValue
    @aws_subscribe(mutations: ["createFieldValue", "updateFieldValue"])
  deleteFieldSub: String @aws_subscribe(mutations: ["deleteField"])
  deleteFieldValueSub: String @aws_subscribe(mutations: ["deleteFieldValue"])
}

type Fields @aws_api_key @aws_cognito_user_pools {
  data: [Field]
  count: Int
}

type Field @aws_api_key @aws_cognito_user_pools {
  _id: ID
  parentId: ID
  position: Float
  label: String
  fieldLabel: String
  multipleValues: Boolean
  oneUserMultipleValues: Boolean
  fieldType: String
  typeId: ListType
  createdBy: User
  updatedBy: ID
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  relationId: ID
  options: AWSJSON
}

type FieldValues @aws_api_key @aws_cognito_user_pools {
  data: [FieldValue]
  count: Int
}

type FieldValue @aws_api_key @aws_cognito_user_pools {
  _id: ID
  parentId: ID
  relationId: ID
  field: ID
  value: String
  valueDate: AWSDateTime
  valueNumber: Int
  valueBoolean: Boolean
  media: [Media]
  itemId: ListItem
  createdBy: User
  updatedBy: ID
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}
